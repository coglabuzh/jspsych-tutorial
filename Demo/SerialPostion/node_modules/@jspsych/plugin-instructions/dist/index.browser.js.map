{"version":3,"file":"index.browser.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"instructions\",\n  parameters: {\n    /** Each element of the array is the HTML-formatted content for a single page. */\n    pages: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Pages\",\n      default: undefined,\n      array: true,\n    },\n    /** The key the subject can press in order to advance to the next page. */\n    key_forward: {\n      type: ParameterType.KEY,\n      pretty_name: \"Key forward\",\n      default: \"ArrowRight\",\n    },\n    /** The key that the subject can press to return to the previous page. */\n    key_backward: {\n      type: ParameterType.KEY,\n      pretty_name: \"Key backward\",\n      default: \"ArrowLeft\",\n    },\n    /** If true, the subject can return to the previous page of the instructions. */\n    allow_backward: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow backward\",\n      default: true,\n    },\n    /** If true, the subject can use keyboard keys to navigate the pages. */\n    allow_keys: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow keys\",\n      default: true,\n    },\n    /** If true, then a \"Previous\" and \"Next\" button will be displayed beneath the instructions. */\n    show_clickable_nav: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Show clickable nav\",\n      default: false,\n    },\n    /** If true, and clickable navigation is enabled, then Page x/y will be shown between the nav buttons. */\n    show_page_number: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Show page number\",\n      default: false,\n    },\n    /** The text that appears before x/y (current/total) pages displayed with show_page_number. */\n    page_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Page label\",\n      default: \"Page\",\n    },\n    /** The text that appears on the button to go backwards. */\n    button_label_previous: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label previous\",\n      default: \"Previous\",\n    },\n    /** The text that appears on the button to go forwards. */\n    button_label_next: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label next\",\n      default: \"Next\",\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **instructions**\n *\n * jsPsych plugin to display text (including HTML-formatted strings) during the experiment.\n * Use it to show a set of pages that participants can move forward/backward through.\n * Page numbers can be displayed to help with navigation by setting show_page_number to true.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-instructions/ instructions plugin documentation on jspsych.org}\n */\nclass InstructionsPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var current_page = 0;\n\n    var view_history = [];\n\n    var start_time = performance.now();\n\n    var last_page_update_time = start_time;\n\n    function btnListener(evt) {\n      evt.target.removeEventListener(\"click\", btnListener);\n      if (this.id === \"jspsych-instructions-back\") {\n        back();\n      } else if (this.id === \"jspsych-instructions-next\") {\n        next();\n      }\n    }\n\n    function show_current_page() {\n      var html = trial.pages[current_page];\n\n      var pagenum_display = \"\";\n      if (trial.show_page_number) {\n        pagenum_display =\n          \"<span style='margin: 0 1em;' class='\" +\n          \"jspsych-instructions-pagenum'>\" +\n          trial.page_label +\n          \" \" +\n          (current_page + 1) +\n          \"/\" +\n          trial.pages.length +\n          \"</span>\";\n      }\n\n      if (trial.show_clickable_nav) {\n        var nav_html = \"<div class='jspsych-instructions-nav' style='padding: 10px 0px;'>\";\n        if (trial.allow_backward) {\n          var allowed = current_page > 0 ? \"\" : \"disabled='disabled'\";\n          nav_html +=\n            \"<button id='jspsych-instructions-back' class='jspsych-btn' style='margin-right: 5px;' \" +\n            allowed +\n            \">&lt; \" +\n            trial.button_label_previous +\n            \"</button>\";\n        }\n        if (trial.pages.length > 1 && trial.show_page_number) {\n          nav_html += pagenum_display;\n        }\n        nav_html +=\n          \"<button id='jspsych-instructions-next' class='jspsych-btn'\" +\n          \"style='margin-left: 5px;'>\" +\n          trial.button_label_next +\n          \" &gt;</button></div>\";\n\n        html += nav_html;\n        display_element.innerHTML = html;\n        if (current_page != 0 && trial.allow_backward) {\n          display_element\n            .querySelector(\"#jspsych-instructions-back\")\n            .addEventListener(\"click\", btnListener);\n        }\n\n        display_element\n          .querySelector(\"#jspsych-instructions-next\")\n          .addEventListener(\"click\", btnListener);\n      } else {\n        if (trial.show_page_number && trial.pages.length > 1) {\n          // page numbers for non-mouse navigation\n          html += \"<div class='jspsych-instructions-pagenum'>\" + pagenum_display + \"</div>\";\n        }\n        display_element.innerHTML = html;\n      }\n    }\n\n    function next() {\n      add_current_page_to_view_history();\n\n      current_page++;\n\n      // if done, finish up...\n      if (current_page >= trial.pages.length) {\n        endTrial();\n      } else {\n        show_current_page();\n      }\n    }\n\n    function back() {\n      add_current_page_to_view_history();\n\n      current_page--;\n\n      show_current_page();\n    }\n\n    function add_current_page_to_view_history() {\n      var current_time = performance.now();\n\n      var page_view_time = Math.round(current_time - last_page_update_time);\n\n      view_history.push({\n        page_index: current_page,\n        viewing_time: page_view_time,\n      });\n\n      last_page_update_time = current_time;\n    }\n\n    const endTrial = () => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.cancelKeyboardResponse(keyboard_listener);\n      }\n\n      display_element.innerHTML = \"\";\n\n      var trial_data = {\n        view_history: view_history,\n        rt: Math.round(performance.now() - start_time),\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    const after_response = (info) => {\n      // have to reinitialize this instead of letting it persist to prevent accidental skips of pages by holding down keys too long\n      keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n        allow_held_key: false,\n      });\n      // check if key is forwards or backwards and update page\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_backward)) {\n        if (current_page !== 0 && trial.allow_backward) {\n          back();\n        }\n      }\n\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_forward)) {\n        next();\n      }\n    };\n\n    show_current_page();\n\n    if (trial.allow_keys) {\n      var keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n      });\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    let curr_page = 0;\n    let rt = 0;\n    let view_history = [];\n\n    // if there is no view history and no RT, simulate a random walk through the pages\n    if (!simulation_options.data?.view_history && !simulation_options.data?.rt) {\n      while (curr_page !== trial.pages.length) {\n        const view_time = Math.round(\n          this.jsPsych.randomization.sampleExGaussian(3000, 300, 1 / 300)\n        );\n        view_history.push({ page_index: curr_page, viewing_time: view_time });\n        rt += view_time;\n        if (curr_page == 0 || !trial.allow_backward) {\n          curr_page++;\n        } else {\n          if (this.jsPsych.randomization.sampleBernoulli(0.9) == 1) {\n            curr_page++;\n          } else {\n            curr_page--;\n          }\n        }\n      }\n    }\n\n    // if there is an RT but no view history, simulate a random walk through the pages\n    // that ends on the final page when the RT is reached\n    if (!simulation_options.data?.view_history && simulation_options.data?.rt) {\n      rt = simulation_options.data.rt;\n      while (curr_page !== trial.pages.length) {\n        view_history.push({ page_index: curr_page, viewing_time: null });\n        if (curr_page == 0 || !trial.allow_backward) {\n          curr_page++;\n        } else {\n          if (this.jsPsych.randomization.sampleBernoulli(0.9) == 1) {\n            curr_page++;\n          } else {\n            curr_page--;\n          }\n        }\n      }\n      const avg_rt_per_page = simulation_options.data.rt / view_history.length;\n      let total_time = 0;\n      for (const page of view_history) {\n        const t = Math.round(\n          this.jsPsych.randomization.sampleExGaussian(\n            avg_rt_per_page,\n            avg_rt_per_page / 10,\n            1 / (avg_rt_per_page / 10)\n          )\n        );\n        page.viewing_time = t;\n        total_time += t;\n      }\n      const diff = simulation_options.data.rt - total_time;\n      // remove equal diff from each page\n      const diff_per_page = Math.round(diff / view_history.length);\n      for (const page of view_history) {\n        page.viewing_time += diff_per_page;\n      }\n    }\n\n    // if there is a view history but no RT, make the RT equal the sum of the view history\n    if (simulation_options.data?.view_history && !simulation_options.data?.rt) {\n      view_history = simulation_options.data.view_history;\n      rt = 0;\n      for (const page of simulation_options.data.view_history) {\n        rt += page.viewing_time;\n      }\n    }\n\n    const default_data = {\n      view_history: view_history,\n      rt: rt,\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const advance = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_forward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-next\"),\n          rt\n        );\n      }\n    };\n\n    const backup = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_backward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-back\"),\n          rt\n        );\n      }\n    };\n\n    let curr_page = 0;\n    let t = 0;\n    for (let i = 0; i < data.view_history.length; i++) {\n      if (i == data.view_history.length - 1) {\n        advance(t + data.view_history[i].viewing_time);\n      } else {\n        if (data.view_history[i + 1].page_index > curr_page) {\n          advance(t + data.view_history[i].viewing_time);\n        }\n        if (data.view_history[i + 1].page_index < curr_page) {\n          backup(t + data.view_history[i].viewing_time);\n        }\n        t += data.view_history[i].viewing_time;\n        curr_page = data.view_history[i + 1].page_index;\n      }\n    }\n  }\n}\n\nexport default InstructionsPlugin;\n"],"names":["ParameterType"],"mappings":"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"}