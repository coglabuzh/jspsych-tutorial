{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"external-html\",\n  parameters: {\n    /** The url of the external html page */\n    url: {\n      type: ParameterType.STRING,\n      pretty_name: \"URL\",\n      default: undefined,\n    },\n    /** The key to continue to the next page. */\n    cont_key: {\n      type: ParameterType.KEY,\n      pretty_name: \"Continue key\",\n      default: null,\n    },\n    /** The button to continue to the next page. */\n    cont_btn: {\n      type: ParameterType.STRING,\n      pretty_name: \"Continue button\",\n      default: null,\n    },\n    /** Function to check whether user is allowed to continue after clicking cont_key or clicking cont_btn */\n    check_fn: {\n      type: ParameterType.FUNCTION,\n      pretty_name: \"Check function\",\n      default: () => true,\n    },\n    /** Whether or not to force a page refresh. */\n    force_refresh: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Force refresh\",\n      default: false,\n    },\n    /** If execute_Script == true, then all JavasScript code on the external page will be executed. */\n    execute_script: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Execute scripts\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **external-html**\n *\n * jsPsych plugin to load and display an external html page. To proceed to the next trial, the\n * user might either press a button on the page or a specific key. Afterwards, the page will be hidden and\n * the experiment will continue.\n *\n * @author Erik Weitnauer\n * @see {@link https://www.jspsych.org/plugins/jspsych-external-html/ external-html plugin documentation on jspsych.org}\n */\nclass ExternalHtmlPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>, on_load: () => void) {\n    // hold the .resolve() function from the Promise that ends the trial\n    let trial_complete;\n\n    var url = trial.url;\n    if (trial.force_refresh) {\n      url = trial.url + \"?t=\" + performance.now();\n    }\n\n    fetch(url)\n      .then((response) => {\n        return response.text();\n      })\n      .then((html) => {\n        display_element.innerHTML = html;\n        on_load();\n        var t0 = performance.now();\n\n        const key_listener = (e) => {\n          if (this.jsPsych.pluginAPI.compareKeys(e.key, trial.cont_key)) {\n            finish();\n          }\n        };\n\n        const finish = () => {\n          if (trial.check_fn && !trial.check_fn(display_element)) {\n            return;\n          }\n          if (trial.cont_key) {\n            display_element.removeEventListener(\"keydown\", key_listener);\n          }\n          var trial_data = {\n            rt: Math.round(performance.now() - t0),\n            url: trial.url,\n          };\n          display_element.innerHTML = \"\";\n          this.jsPsych.finishTrial(trial_data);\n          trial_complete();\n        };\n\n        // by default, scripts on the external page are not executed with XMLHttpRequest().\n        // To activate their content through DOM manipulation, we need to relocate all script tags\n        if (trial.execute_script) {\n          // changed for..of getElementsByTagName(\"script\") here to for i loop due to TS error:\n          // Type 'HTMLCollectionOf<HTMLScriptElement>' must have a '[Symbol.iterator]()' method that returns an iterator.ts(2488)\n          var all_scripts = display_element.getElementsByTagName(\"script\");\n          for (var i = 0; i < all_scripts.length; i++) {\n            const relocatedScript = document.createElement(\"script\");\n            const curr_script = all_scripts[i];\n            relocatedScript.text = curr_script.text;\n            curr_script.parentNode.replaceChild(relocatedScript, curr_script);\n          }\n        }\n\n        if (trial.cont_btn) {\n          display_element.querySelector(\"#\" + trial.cont_btn).addEventListener(\"click\", finish);\n        }\n\n        if (trial.cont_key) {\n          display_element.addEventListener(\"keydown\", key_listener);\n        }\n      })\n      .catch((err) => {\n        console.error(`Something went wrong with fetch() in plugin-external-html.`, err);\n      });\n\n    // helper to load via XMLHttpRequest\n    /*const load = (element, file, callback) => {\n      var xmlhttp = new XMLHttpRequest();\n      xmlhttp.open(\"GET\", file, true);\n      xmlhttp.onload = () => {\n        console.log(`loaded ${xmlhttp.status}`)\n        if (xmlhttp.status == 200 || xmlhttp.status == 0) {\n          //Check if loaded\n          element.innerHTML = xmlhttp.responseText;\n          console.log(`made it ${xmlhttp.responseText}`);\n          callback();\n        }\n      };\n      xmlhttp.send();\n    };\n\n    load(display_element, url, () => {\n      \n    });\n*/\n    return new Promise((resolve) => {\n      trial_complete = resolve;\n    });\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const default_data = {\n      url: trial.url,\n      rt: this.jsPsych.randomization.sampleExGaussian(2000, 200, 1 / 200, true),\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial, () => {\n      load_callback();\n      if (trial.cont_key) {\n        this.jsPsych.pluginAPI.pressKey(trial.cont_key, data.rt);\n      } else if (trial.cont_btn) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#\" + trial.cont_btn),\n          data.rt\n        );\n      }\n    });\n  }\n}\n\nexport default ExternalHtmlPlugin;\n"],"names":[],"mappings":"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"}