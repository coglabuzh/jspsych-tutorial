import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from "jspsych";
declare const info: {
    readonly name: "fullscreen";
    readonly parameters: {
        /** If true, experiment will enter fullscreen mode. If false, the browser will exit fullscreen mode. */
        readonly fullscreen_mode: {
            readonly type: ParameterType.BOOL;
            readonly pretty_name: "Fullscreen mode";
            readonly default: true;
            readonly array: false;
        };
        /** HTML content to display above the button to enter fullscreen mode */
        readonly message: {
            readonly type: ParameterType.HTML_STRING;
            readonly pretty_name: "Message";
            readonly default: "<p>The experiment will switch to full screen mode when you press the button below</p>";
            readonly array: false;
        };
        /** The text that appears on the button to enter fullscreen */
        readonly button_label: {
            readonly type: ParameterType.STRING;
            readonly pretty_name: "Button label";
            readonly default: "Continue";
            readonly array: false;
        };
        /** The length of time to delay after entering fullscreen mode before ending the trial. */
        readonly delay_after: {
            readonly type: ParameterType.INT;
            readonly pretty_name: "Delay after";
            readonly default: 1000;
            readonly array: false;
        };
    };
};
declare type Info = typeof info;
/**
 * **fullscreen**
 *
 * jsPsych plugin for toggling fullscreen mode in the browser
 *
 * @author Josh de Leeuw
 * @see {@link https://www.jspsych.org/plugins/jspsych-fullscreen/ fullscreen plugin documentation on jspsych.org}
 */
declare class FullscreenPlugin implements JsPsychPlugin<Info> {
    private jsPsych;
    static info: {
        readonly name: "fullscreen";
        readonly parameters: {
            /** If true, experiment will enter fullscreen mode. If false, the browser will exit fullscreen mode. */
            readonly fullscreen_mode: {
                readonly type: ParameterType.BOOL;
                readonly pretty_name: "Fullscreen mode";
                readonly default: true;
                readonly array: false;
            };
            /** HTML content to display above the button to enter fullscreen mode */
            readonly message: {
                readonly type: ParameterType.HTML_STRING;
                readonly pretty_name: "Message";
                readonly default: "<p>The experiment will switch to full screen mode when you press the button below</p>";
                readonly array: false;
            };
            /** The text that appears on the button to enter fullscreen */
            readonly button_label: {
                readonly type: ParameterType.STRING;
                readonly pretty_name: "Button label";
                readonly default: "Continue";
                readonly array: false;
            };
            /** The length of time to delay after entering fullscreen mode before ending the trial. */
            readonly delay_after: {
                readonly type: ParameterType.INT;
                readonly pretty_name: "Delay after";
                readonly default: 1000;
                readonly array: false;
            };
        };
    };
    private rt;
    private start_time;
    constructor(jsPsych: JsPsych);
    trial(display_element: HTMLElement, trial: TrialType<Info>): void;
    private showDisplay;
    private endTrial;
    private enterFullScreen;
    private exitFullScreen;
    simulate(trial: TrialType<Info>, simulation_mode: any, simulation_options: any, load_callback: () => void): void;
    private create_simulation_data;
    private simulate_data_only;
    private simulate_visual;
}
export default FullscreenPlugin;
